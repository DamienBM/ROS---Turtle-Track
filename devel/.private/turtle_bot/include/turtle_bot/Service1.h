// Generated by gencpp from file turtle_bot/Service1.msg
// DO NOT EDIT!


#ifndef TURTLE_BOT_MESSAGE_SERVICE1_H
#define TURTLE_BOT_MESSAGE_SERVICE1_H

#include <ros/service_traits.h>


#include <turtle_bot/Service1Request.h>
#include <turtle_bot/Service1Response.h>


namespace turtle_bot
{

struct Service1
{

typedef Service1Request Request;
typedef Service1Response Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Service1
} // namespace turtle_bot


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::turtle_bot::Service1 > {
  static const char* value()
  {
    return "e87f7e096f6ac40f3431dc20e102fbb8";
  }

  static const char* value(const ::turtle_bot::Service1&) { return value(); }
};

template<>
struct DataType< ::turtle_bot::Service1 > {
  static const char* value()
  {
    return "turtle_bot/Service1";
  }

  static const char* value(const ::turtle_bot::Service1&) { return value(); }
};


// service_traits::MD5Sum< ::turtle_bot::Service1Request> should match 
// service_traits::MD5Sum< ::turtle_bot::Service1 > 
template<>
struct MD5Sum< ::turtle_bot::Service1Request>
{
  static const char* value()
  {
    return MD5Sum< ::turtle_bot::Service1 >::value();
  }
  static const char* value(const ::turtle_bot::Service1Request&)
  {
    return value();
  }
};

// service_traits::DataType< ::turtle_bot::Service1Request> should match 
// service_traits::DataType< ::turtle_bot::Service1 > 
template<>
struct DataType< ::turtle_bot::Service1Request>
{
  static const char* value()
  {
    return DataType< ::turtle_bot::Service1 >::value();
  }
  static const char* value(const ::turtle_bot::Service1Request&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::turtle_bot::Service1Response> should match 
// service_traits::MD5Sum< ::turtle_bot::Service1 > 
template<>
struct MD5Sum< ::turtle_bot::Service1Response>
{
  static const char* value()
  {
    return MD5Sum< ::turtle_bot::Service1 >::value();
  }
  static const char* value(const ::turtle_bot::Service1Response&)
  {
    return value();
  }
};

// service_traits::DataType< ::turtle_bot::Service1Response> should match 
// service_traits::DataType< ::turtle_bot::Service1 > 
template<>
struct DataType< ::turtle_bot::Service1Response>
{
  static const char* value()
  {
    return DataType< ::turtle_bot::Service1 >::value();
  }
  static const char* value(const ::turtle_bot::Service1Response&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // TURTLE_BOT_MESSAGE_SERVICE1_H
