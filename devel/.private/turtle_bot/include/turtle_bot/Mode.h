// Generated by gencpp from file turtle_bot/Mode.msg
// DO NOT EDIT!


#ifndef TURTLE_BOT_MESSAGE_MODE_H
#define TURTLE_BOT_MESSAGE_MODE_H

#include <ros/service_traits.h>


#include <turtle_bot/ModeRequest.h>
#include <turtle_bot/ModeResponse.h>


namespace turtle_bot
{

struct Mode
{

typedef ModeRequest Request;
typedef ModeResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Mode
} // namespace turtle_bot


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::turtle_bot::Mode > {
  static const char* value()
  {
    return "4082b788d7dd11d8b86a9ae69035eccf";
  }

  static const char* value(const ::turtle_bot::Mode&) { return value(); }
};

template<>
struct DataType< ::turtle_bot::Mode > {
  static const char* value()
  {
    return "turtle_bot/Mode";
  }

  static const char* value(const ::turtle_bot::Mode&) { return value(); }
};


// service_traits::MD5Sum< ::turtle_bot::ModeRequest> should match 
// service_traits::MD5Sum< ::turtle_bot::Mode > 
template<>
struct MD5Sum< ::turtle_bot::ModeRequest>
{
  static const char* value()
  {
    return MD5Sum< ::turtle_bot::Mode >::value();
  }
  static const char* value(const ::turtle_bot::ModeRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::turtle_bot::ModeRequest> should match 
// service_traits::DataType< ::turtle_bot::Mode > 
template<>
struct DataType< ::turtle_bot::ModeRequest>
{
  static const char* value()
  {
    return DataType< ::turtle_bot::Mode >::value();
  }
  static const char* value(const ::turtle_bot::ModeRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::turtle_bot::ModeResponse> should match 
// service_traits::MD5Sum< ::turtle_bot::Mode > 
template<>
struct MD5Sum< ::turtle_bot::ModeResponse>
{
  static const char* value()
  {
    return MD5Sum< ::turtle_bot::Mode >::value();
  }
  static const char* value(const ::turtle_bot::ModeResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::turtle_bot::ModeResponse> should match 
// service_traits::DataType< ::turtle_bot::Mode > 
template<>
struct DataType< ::turtle_bot::ModeResponse>
{
  static const char* value()
  {
    return DataType< ::turtle_bot::Mode >::value();
  }
  static const char* value(const ::turtle_bot::ModeResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // TURTLE_BOT_MESSAGE_MODE_H
