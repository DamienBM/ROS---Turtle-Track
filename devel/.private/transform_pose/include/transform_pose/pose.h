// Generated by gencpp from file transform_pose/pose.msg
// DO NOT EDIT!


#ifndef TRANSFORM_POSE_MESSAGE_POSE_H
#define TRANSFORM_POSE_MESSAGE_POSE_H

#include <ros/service_traits.h>


#include <transform_pose/poseRequest.h>
#include <transform_pose/poseResponse.h>


namespace transform_pose
{

struct pose
{

typedef poseRequest Request;
typedef poseResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct pose
} // namespace transform_pose


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::transform_pose::pose > {
  static const char* value()
  {
    return "e87f7e096f6ac40f3431dc20e102fbb8";
  }

  static const char* value(const ::transform_pose::pose&) { return value(); }
};

template<>
struct DataType< ::transform_pose::pose > {
  static const char* value()
  {
    return "transform_pose/pose";
  }

  static const char* value(const ::transform_pose::pose&) { return value(); }
};


// service_traits::MD5Sum< ::transform_pose::poseRequest> should match 
// service_traits::MD5Sum< ::transform_pose::pose > 
template<>
struct MD5Sum< ::transform_pose::poseRequest>
{
  static const char* value()
  {
    return MD5Sum< ::transform_pose::pose >::value();
  }
  static const char* value(const ::transform_pose::poseRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::transform_pose::poseRequest> should match 
// service_traits::DataType< ::transform_pose::pose > 
template<>
struct DataType< ::transform_pose::poseRequest>
{
  static const char* value()
  {
    return DataType< ::transform_pose::pose >::value();
  }
  static const char* value(const ::transform_pose::poseRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::transform_pose::poseResponse> should match 
// service_traits::MD5Sum< ::transform_pose::pose > 
template<>
struct MD5Sum< ::transform_pose::poseResponse>
{
  static const char* value()
  {
    return MD5Sum< ::transform_pose::pose >::value();
  }
  static const char* value(const ::transform_pose::poseResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::transform_pose::poseResponse> should match 
// service_traits::DataType< ::transform_pose::pose > 
template<>
struct DataType< ::transform_pose::poseResponse>
{
  static const char* value()
  {
    return DataType< ::transform_pose::pose >::value();
  }
  static const char* value(const ::transform_pose::poseResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // TRANSFORM_POSE_MESSAGE_POSE_H
